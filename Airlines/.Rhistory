meta.df0
## Run the analysis by Group
meta.df0 <- Airlines %>% group_by(Group) %>% do(mod=fun.reg(.))
str(Airlines)
set.seed(10000)
no.of.group <- 100
Airlines$Group <- sample(1:nrow(Airlines)) %% no.of.group + 1
Airlines$Group
## Run the analysis by Group
meta.df0 <- Airlines %>% group_by(Group) %>% do(mod=fun.reg(.))
library(metaSEM)
## Run the analysis by Group
meta.df0 <- Airlines %>% group_by(Group) %>% do(mod=fun.reg(.))
meta.df0
t(apply(meta.df0, 1, function(x) x$mod))
meta.df0 <- t(apply(meta.df0, 1, function(x) x$mod))
head(meta.df0)
REM.reg <- meta(y=cbind(y1,y2), v=cbind(v11,v21,v22), data=meta.df0,
model.name="Regression analysis REM")
summary(REM.reg)
?meta
REM.reg <- meta(y=cbind(y1,y2), v=cbind(v11,v21,v22), data=meta.df0,
RE.constraints = 0,
model.name="Regression analysis REM")
REM.reg <- meta(y=cbind(y1,y2), v=cbind(v11,v21,v22), data=meta.df0,
RE.constraints = matrix(0, ncol=2, nrow=2),
model.name="Fixed effects model")
summary(REM.reg)
plot(REM.reg, axis.labels=c("Regression coefficient DepDelay",
"Regression coefficient Distance"),
ylim=c(-2.5,0.7), xlim=c(0.65,1.2), study.min.cex = 0.6)
plot(REM.reg, axis.labels=c("Regression coefficient DepDelay",
"Regression coefficient Distance"))
plot(REM.reg, axis.labels=c("Regression coefficient DepDelay",
"Regression coefficient Distance"))
set.seed(10000)
no.of.group <- 100
Airlines$Group <- sample(1:nrow(Airlines)) %% no.of.group + 1
Airlines$Group
## Run the analysis by Group
meta.df0 <- Airlines %>% group_by(Group) %>% do(mod=fun.reg(.))
## Convert it into a matrix
meta.df0 <- t(apply(meta.df0, 1, function(x) x$mod))
head(meta.df0)
plot(y1~y2, meta.df0)
nrow(Airlines)/100
REM.reg <- meta(y=cbind(y1,y2), v=cbind(v11,v21,v22), data=meta.df0,
RE.constraints = matrix(0, ncol=2, nrow=2),
model.name="Fixed effects model")
summary(REM.reg)
plot(REM.reg, axis.labels=c("Regression coefficient DepDelay",
"Regression coefficient Distance"))
set.seed(1000)
no.of.group <- 100
Airlines$Group <- sample(1:nrow(Airlines)) %% no.of.group + 1
Airlines$Group
## Run the analysis by Group
meta.df0 <- Airlines %>% group_by(Group) %>% do(mod=fun.reg(.))
## Convert it into a matrix
meta.df0 <- t(apply(meta.df0, 1, function(x) x$mod))
head(meta.df0)
## Meta-analyze results by using a random-effects meta-analysis
## y1: regression coefficient of DepDelay
## y2: regression coefficient of Distance/1000
## RE.constraints = matrix(0, ncol=2, nrow=2): Fixed-effects model
REM.reg <- meta(y=cbind(y1,y2), v=cbind(v11,v21,v22), data=meta.df0,
RE.constraints = matrix(0, ncol=2, nrow=2),
model.name="Fixed effects model")
summary(REM.reg)
## Plot the effect sizes
plot(REM.reg, axis.labels=c("Regression coefficient DepDelay",
"Regression coefficient Distance"))
plot(REM.reg, axis.labels=c("Regression coefficient DepDelay",
"Regression coefficient Distance"))
table(Airlines$Group)
sample(1:nrow(Airlines))
summary(sample(1:nrow(Airlines)))
set.seed(569840)
no.of.group <- 100
Airlines$Group <- sample(1:nrow(Airlines)) %% no.of.group + 1
Airlines$Group
## Run the analysis by Group
meta.df0 <- Airlines %>% group_by(Group) %>% do(mod=fun.reg(.))
## Convert it into a matrix
meta.df0 <- t(apply(meta.df0, 1, function(x) x$mod))
head(meta.df0)
## Meta-analyze results by using a random-effects meta-analysis
## y1: regression coefficient of DepDelay
## y2: regression coefficient of Distance/1000
## RE.constraints = matrix(0, ncol=2, nrow=2): Fixed-effects model
REM.reg <- meta(y=cbind(y1,y2), v=cbind(v11,v21,v22), data=meta.df0,
RE.constraints = matrix(0, ncol=2, nrow=2),
model.name="Fixed effects model")
summary(REM.reg)
## Plot the effect sizes
plot(REM.reg, axis.labels=c("Regression coefficient DepDelay",
"Regression coefficient Distance"))
REM.reg <- meta(y=cbind(y1,y2), v=cbind(v11,v21,v22), data=meta.df0,
#RE.constraints = matrix(0, ncol=2, nrow=2),
model.name="Fixed effects model")
summary(REM.reg)
## Plot the effect sizes
plot(REM.reg, axis.labels=c("Regression coefficient DepDelay",
"Regression coefficient Distance"))
no.of.group <- 10
Airlines$Group <- sample(1:nrow(Airlines)) %% no.of.group + 1
Airlines$Group
## Run the analysis by Group
meta.df0 <- Airlines %>% group_by(Group) %>% do(mod=fun.reg(.))
## Convert it into a matrix
meta.df0 <- t(apply(meta.df0, 1, function(x) x$mod))
head(meta.df0)
## Meta-analyze results by using a random-effects meta-analysis
## y1: regression coefficient of DepDelay
## y2: regression coefficient of Distance/1000
## RE.constraints = matrix(0, ncol=2, nrow=2): Fixed-effects model
REM.reg <- meta(y=cbind(y1,y2), v=cbind(v11,v21,v22), data=meta.df0,
#RE.constraints = matrix(0, ncol=2, nrow=2),
model.name="Fixed effects model")
summary(REM.reg)
## Plot the effect sizes
plot(REM.reg, axis.labels=c("Regression coefficient DepDelay",
"Regression coefficient Distance"))
no.of.group <- 1000
Airlines$Group <- sample(1:nrow(Airlines)) %% no.of.group + 1
Airlines$Group
## Run the analysis by Group
meta.df0 <- Airlines %>% group_by(Group) %>% do(mod=fun.reg(.))
## Convert it into a matrix
meta.df0 <- t(apply(meta.df0, 1, function(x) x$mod))
head(meta.df0)
## Meta-analyze results by using a random-effects meta-analysis
## y1: regression coefficient of DepDelay
## y2: regression coefficient of Distance/1000
## RE.constraints = matrix(0, ncol=2, nrow=2): Fixed-effects model
REM.reg <- meta(y=cbind(y1,y2), v=cbind(v11,v21,v22), data=meta.df0,
#RE.constraints = matrix(0, ncol=2, nrow=2),
model.name="Fixed effects model")
summary(REM.reg)
## Plot the effect sizes
plot(REM.reg, axis.labels=c("Regression coefficient DepDelay",
"Regression coefficient Distance"))
View(meta.df0)
set.seed(569840)
no.of.group <- 100
Airlines$Group <- sample(1:nrow(Airlines)) %% no.of.group + 1
Airlines$Group
## Run the analysis by Group
meta.df0 <- Airlines %>% group_by(Group) %>% do(mod=fun.reg(.))
## Convert it into a matrix
meta.df0 <- t(apply(meta.df0, 1, function(x) x$mod))
head(meta.df0)
## Meta-analyze results by using a random-effects meta-analysis
## y1: regression coefficient of DepDelay
## y2: regression coefficient of Distance/1000
## RE.constraints = matrix(0, ncol=2, nrow=2): Fixed-effects model
REM.reg <- meta(y=cbind(y1,y2), v=cbind(v11,v21,v22), data=meta.df0,
RE.constraints = matrix(0, ncol=2, nrow=2),
model.name="Fixed effects model")
summary(REM.reg)
## Plot the effect sizes
plot(REM.reg, axis.labels=c("Regression coefficient DepDelay",
"Regression coefficient Distance"))
set.seed(569840)
no.of.group <- 10000
Airlines$Group <- sample(1:nrow(Airlines)) %% no.of.group + 1
Airlines$Group
## Run the analysis by Group
meta.df0 <- Airlines %>% group_by(Group) %>% do(mod=fun.reg(.))
## Convert it into a matrix
meta.df0 <- t(apply(meta.df0, 1, function(x) x$mod))
head(meta.df0)
## Meta-analyze results by using a random-effects meta-analysis
## y1: regression coefficient of DepDelay
## y2: regression coefficient of Distance/1000
## RE.constraints = matrix(0, ncol=2, nrow=2): Fixed-effects model
REM.reg <- meta(y=cbind(y1,y2), v=cbind(v11,v21,v22), data=meta.df0,
RE.constraints = matrix(0, ncol=2, nrow=2),
model.name="Fixed effects model")
plot(REM.reg, axis.labels=c("Regression coefficient DepDelay",
"Regression coefficient Distance"))
table(Airlines$Group)
library(lme4)
## Function to fit regression analysis
## y1 to y3: Intercept, DepDelay and Distance/1000.
## v11 to v33: Sampling covariance matrix of the parameter estimates
fun.lmer <- function(dt) {  fit <- try(lmer(ArrDelay~DepDelay+I(Distance/1000)+
(1|Month)+(1|DayofMonth)+(1|DayOfWeek)+
(1|Origin)+(1|Dest),
REML=FALSE, na.action="na.omit",
data=dt), silent=TRUE)
if (is.element("try-error", class(fit))) {
c(y1=NA, y2=NA, v11=NA, v21=NA, v22=NA)
} else {
## regression coefficients excluding the intercept
y <- unname(fixef(fit)[-1])
## sampling variance covariance matrix excluding the intercept
v <- vcov(fit)[-1, -1]
c(y1=y[1],y2=y[2],v11=v[1,1],v21=v[2,1],v22=v[2,2])
}
}
## Run the analysis by Year
## It may takes several minuates!
meta.df2 <- Airlines %>% group_by(Year) %>% do(mod=fun.lmer(.))
meta.df2
meta.df2 <- data.frame(Year=meta.df2$Year,
t(apply(meta.df2, 1, function(x) x$mod)))
head(meta.df2)
save(meta.df2, file="Airlineslme.RData")
## Load the data to avoid long computation
load("Airlineslme.RData")
Meta-analyze results by using a random-effects meta-analysis
## y1: regression coefficient of DepDelay
## y2: regression coefficient of Distance/1000
meta.rem <- meta(y=cbind(y1,y2), v=cbind(v11,v21,v22), data=meta.df2,
model.name="Random effects model")
summary(meta.rem)
## Variance component of the random effects
VarComp.lmer <- vec2symMat(coef(meta.rem, select="random"))
VarComp.lmer
## Correlation between the random effects
cov2cor(VarComp.lmer)
plot(meta.rem, axis.labels=c("Regression coefficient on DepDelay",
"Regression coefficient on Distance"),
ylim=c(-2.5,0.7), xlim=c(0.65,1.2), study.min.cex = 0.6)
load("AirlinesDemo.RData")
library(dplyr)
## Calculate the means of ArrDelay, DepDelay, and total no. of flights
## grouped by year and month
my.summary <- Airlines %>% group_by(Year, Month) %>%
## na.rm=TRUE: remove missing data in calculating the means
summarise(arr_delay=mean(ArrDelay, na.rm = TRUE),
dep_delay=mean(DepDelay, na.rm = TRUE),
distance=mean(Distance, na.rm = TRUE),
flights=n())
my.summary
## Sort it by Year and Month
my.summary <- my.summary %>% arrange(Year, Month)
my.summary
x <- 1:nrow(my.summary)
## Plot the no. of flights
plot(x, my.summary$flights, type="l", xaxt="n",
xlab="Year", ylab="Numbers of flights per month",
main="Numbers of flights (0.1% of the data) per month by years (1987-2008)")
abline(v=c(x[my.summary$Month=="1"],256), lty=2)
abline(v=168, lwd=3, col="red")
axis(1, at=c(-3, x[my.summary$Month=="6"]), labels=1987:2008)
par(mfrow=c(3,1))
plot(x, my.summary$arr_delay, type="l", xaxt="n",
xlab="Year", ylab="Arrival delay (min)",
main="Arrival delay by years and months")
abline(v=c(x[my.summary$Month=="1"],256), lty=2)
abline(v=168, lwd=3, col="red")
axis(1, at=c(-3, x[my.summary$Month=="6"]), labels=1987:2008)
plot(x, my.summary$dep_delay, type="l", xaxt="n",
xlab="Year", ylab="Departure delay (min)",
main="Departure delay by years and months")
abline(v=c(x[my.summary$Month=="1"],256), lty=2)
abline(v=168, lwd=3, col="red")
axis(1, at=c(-3, x[my.summary$Month=="6"]), labels=1987:2008)
plot(x, with(my.summary, arr_delay-dep_delay), type="l", xaxt="n",
xlab="Year", ylab="Departure delay (min)",
main="Arrival minus departure delay by years and months")
abline(v=c(x[my.summary$Month=="1"],256), lty=2)
abline(v=168, lwd=3, col="red")
abline(h=0, lty=2)
axis(1, at=c(-3, x[my.summary$Month=="6"]), labels=1987:2008)
panel.cor <- function(x, y, digits = 2, prefix = "", cex.cor=2, ...)
{
usr <- par("usr"); on.exit(par(usr))
par(usr = c(0, 1, 0, 1))
r <- cor(x, y)
txt <- format(c(r, 0.123456789), digits = digits)[1]
txt <- paste0(prefix, txt)
text(0.5, 0.5, txt, cex = cex.cor)
}
panel.hist <- function(x, ...)
{
usr <- par("usr"); on.exit(par(usr))
par(usr = c(usr[1:2], 0, 1.5) )
h <- hist(x, plot = FALSE)
breaks <- h$breaks; nB <- length(breaks)
y <- h$counts; y <- y/max(y)
rect(breaks[-nB], 0, breaks[-1], y, col = "grey", ...)
}
pairs(my.summary[, c("arr_delay", "dep_delay", "distance", "flights")],
lower.panel = panel.smooth, upper.panel = panel.cor,
diag.panel = panel.hist)
x <- 1:nrow(my.summary)
## Plot the no. of flights
plot(x, my.summary$flights, type="l", xaxt="n",
xlab="Year", ylab="Numbers of flights per month",
main="Numbers of flights (0.1% of the data) per month by years (1987-2008)")
c(x[my.summary$Month=="1"],256)
x[my.summary$Month=="1"],
x[my.summary$Month=="1"]
abline(v=c(x[my.summary$Month=="1"]), lty=2)
abline(v=c(x[my.summary$Month=="1"],256), lty=2)
library(metaSEM)
## Try to use multiple cores in OpenMx, which may speed up some of the analyses
mxOption(NULL, 'Number of Threads', (parallel::detectCores()-1))
my.model <- "ArrDelay~y1*DepDelay+y2*Distance"
## Display the graphica model
plot(my.model, col="yellow")
?plot.character
## Display the graphica model
plot(my.model, col="yellow", sizeMan=8)
## Display the graphica model
plot(my.model, col="yellow", sizeMan=10)
set.seed(569840)
no.of.group <- 100
Airlines$Group <- sample(1:nrow(Airlines)) %% no.of.group + 1
table(Airlines$Group)
## Run the analysis by Group and save the results in "meta.df0"
meta.df0 <- Airlines %>% group_by(Group) %>% do(mod=fun.reg(.))
fun.reg <- function(dt) {
## Run the analysis and capture the error
fit <- try(lm(ArrDelay~DepDelay+I(Distance/1000), data=dt), silent=TRUE)
## If it is an error, returns NA
if (is.element("try-error", class(fit))) {
c(y1=NA, y2=NA, v11=NA, v21=NA, v22=NA)
} else {
## Regression coefficients excluding the intercept
## Remove the additional names
y <- unname(coef(fit))
## sampling variance-covariance matrix excluding the intercept
## vech() takes the lower triangle matrix including the diagonals
v <- vech(vcov(fit)[-1, -1])
c(y1=y[2], y2=y[3], v11=v[1], v21=v[2], v22=v[3])
}
}
## Run the analysis by Group and save the results in "meta.df0"
meta.df0 <- Airlines %>% group_by(Group) %>% do(mod=fun.reg(.))
meta.df0
meta.df0 <- t(apply(meta.df0, 1, function(x) x$mod))
head(meta.df0)
FEM.reg <- meta(y=cbind(y1,y2), v=cbind(v11,v21,v22), data=meta.df0,
RE.constraints = matrix(0, ncol=2, nrow=2),
model.name="Fixed effects model")
summary(FEM.reg)
plot(FEM.reg)
plot(FEM.reg)
plot(FEM.reg)
meta.df1 <- Airlines %>% group_by(Year) %>% do(mod=fun.reg(.))
meta.df1
## Append Year in the data frame
meta.df1 <- data.frame(Year=meta.df1$Year,
t(apply(meta.df1, 1, function(x) x$mod)))
head(meta.df1)
REM.reg <- meta(y=cbind(y1,y2), v=cbind(v11,v21,v22), data=meta.df1,
model.name="Random effects model")
summary(REM.reg)
VarComp.reg <- vec2symMat(coef(REM.reg, select="random"))
VarComp.reg
## Correlation between the random effects
cov2cor(VarComp.reg)
meta.df1 <- Airlines %>% group_by(Year, Month) %>% do(mod=fun.reg(.))
meta.df1
meta.df1 <- data.frame(Year=meta.df1$Year, Month=meta.df1$Month,
t(apply(meta.df1, 1, function(x) x$mod)))
head(meta.df1)
meta.df1 <- data.frame(Year=meta.df1$Year,
t(apply(meta.df1, 1, function(x) x$mod)))
head(meta.df1)
REM.reg <- meta(y=cbind(y1,y2), v=cbind(v11,v21,v22), data=meta.df1,
model.name="Random effects model")
summary(REM.reg)
## Variance components of the random effects
VarComp.reg <- vec2symMat(coef(REM.reg, select="random"))
VarComp.reg
## Correlation between the random effects
cov2cor(VarComp.reg)
plot(REM.reg, axis.labels=c("Regression coefficient DepDelay",
"Regression coefficient Distance"),
ylim=c(-2.5,0.7), xlim=c(0.65,1.2), study.min.cex = 0.6)
plot(REM.reg)
REM.reg_mod <- meta(y=cbind(y1,y2), v=cbind(v11,v21,v22),
x = scale(Year, scale=FALSE), data=meta.df1,
model.name="Regression analysis REM with year as moderator")
summary(REM.reg_mod)
library(lme4)
## Function to fit regression analysis
## y1 to y3: Intercept, DepDelay and Distance/1000.
## v11 to v33: Sampling covariance matrix of the parameter estimates
fun.lmer <- function(dt) {  fit <- try(lmer(ArrDelay~DepDelay+I(Distance/1000)+
(1|Month)+(1|DayofMonth)+(1|DayOfWeek)+
(1|Origin)+(1|Dest),
REML=FALSE, na.action="na.omit",
data=dt), silent=TRUE)
if (is.element("try-error", class(fit))) {
c(y1=NA, y2=NA, v11=NA, v21=NA, v22=NA)
} else {
## regression coefficients excluding the intercept
y <- unname(fixef(fit)[-1])
## sampling variance-covariance matrix excluding the intercept
v <- vcov(fit)[-1, -1]
c(y1=y[1],y2=y[2],v11=v[1,1],v21=v[2,1],v22=v[2,2])
}
}
## Run the analysis by Year
## It may takes several minuates!
meta.df2 <- Airlines %>% group_by(Year) %>% do(mod=fun.lmer(.))
meta.df2
load("AirlinesDemo.RData")
library(dplyr)
library(metaSEM)
## No. of cores in my old notebook
parallel::detectCores()
## Try to use multiple cores in OpenMx. It may speed up some of the analyses
## It is better to leave one core to the system and other operations.
mxOption(NULL, 'Number of Threads', (parallel::detectCores()-1))
## Function to fit regression analysis
## I(Distance/1000): Distance is divided by 1000 to improve numerical stability.
## y1 and y2: Regression coefficients from Distance and DepDelay.
## v11 to v22: Sampling covariance matrix of the parameter estimates
fun.reg <- function(dt) {
## Run the analysis and capture the error
fit <- try(lm(ArrDelay~DepDelay+I(Distance/1000), data=dt), silent=TRUE)
## If it is an error, returns NA
if (is.element("try-error", class(fit))) {
c(y1=NA, y2=NA, v11=NA, v21=NA, v22=NA)
} else {
## Regression coefficients excluding the intercept
## Remove the additional names
y <- unname(coef(fit))
## sampling variance-covariance matrix excluding the intercept
## vech() takes the lower triangle matrix including the diagonals
v <- vech(vcov(fit)[-1, -1])
c(y1=y[2], y2=y[3], v11=v[1], v21=v[2], v22=v[3])
}
}
```
## Random split (fixed-effects meta-analysis)
* We may randomly split the data into *k* groups. There is a total of `r nrow(Airlines)` rows in the dataset. We randomly split it into 100 groups.
```{r}
## For replicability
set.seed(569840)
no.of.group <- 100
Airlines$Group <- sample(1:nrow(Airlines)) %% no.of.group + 1
## Display the frequency table
table(Airlines$Group)
## Run the analysis by Group and save the results in "meta.df0"
meta.df0 <- Airlines %>% group_by(Group) %>% do(mod=fun.reg(.))
## Group: 1 to 100
## mod: y1, y2, v11, v21, and v22
meta.df0
## It is easier to work with a matrix or data frame.
## Let's convert it into a matrix
## Extract the results from "mod" and convert them into a matrix
meta.df0 <- t(apply(meta.df0, 1, function(x) x$mod))
head(meta.df0)
FEM.reg <- meta(y=cbind(y1,y2), v=cbind(v11,v21,v22), data=meta.df0,
RE.constraints = matrix(0, ncol=2, nrow=2),
model.name="Fixed effects model")
summary(FEM.reg)
meta.df1 <- Airlines %>% group_by(Year) %>% do(mod=fun.reg(.))
meta.df1
## Append Year in the data frame
meta.df1 <- data.frame(Year=meta.df1$Year,
t(apply(meta.df1, 1, function(x) x$mod)))
REM.reg <- meta(y=cbind(y1,y2), v=cbind(v11,v21,v22), data=meta.df1,
model.name="Random effects model")
summary(REM.reg)
load("Airlineslme.RData")
head(meta.df2)
## Meta-analyze results by using a random-effects meta-analysis
## y1: regression coefficient of DepDelay
## y2: regression coefficient of Distance/1000
meta.rem <- meta(y=cbind(y1,y2), v=cbind(v11,v21,v22), data=meta.df2,
model.name="Random effects model")
summary(meta.rem)
REM.reg
summary(FEM.reg)
summary(REM.reg)
summary(REM.lmer)
head(meta.df2)
## Meta-analyze results by using a random-effects meta-analysis
## y1: regression coefficient of DepDelay
## y2: regression coefficient of Distance/1000
REM.lmer <- meta(y=cbind(y1,y2), v=cbind(v11,v21,v22), data=meta.df2,
model.name="Random effects model")
summary(REM.lmer)
coef(FEM.reg)
coef(REM.lmer)
coef(REM.lmer, select="fixed")
coef(FEM.reg, select="fixed")
cbind(a=coef(FEM.reg), b=coef(REM.reg, select="fixed"))
cbind(`Random split`=coef(FEM.reg),
`Stratified split (by year)`=coef(REM.reg, select="fixed"),
`Stratified split with lmer)`=coef(REM.lmer, select = "fixed"))
cbind(`Random`=coef(FEM.reg),
`Stratified (by year)`=coef(REM.reg, select="fixed"),
`Stratified with lmer`=coef(REM.lmer, select = "fixed"))
vcov(FEM.reg)
## Function to get the SE
SE <- function(x) sqrt(vcov(x, select="fixed"))
cbind(`Random`=SE(FEM.reg),
`Stratified (by year)`=SE(REM.reg, select="fixed"),
`Stratified with lmer`=SE(REM.lmer, select = "fixed"))
vcov(FEM.reg)
## Function to get the SE
SE <- function(x) sqrt(diag(vcov(x, select="fixed")))
cbind(`Random`=SE(FEM.reg),
`Stratified (by year)`=SE(REM.reg, select="fixed"),
`Stratified with lmer`=SE(REM.lmer, select = "fixed"))
vcov(REM.reg)
vcov(REM.reg, select = "fixed")
SE(FEM.reg)
SE(REM.reg)
cbind(`Random`=SE(FEM.reg),
`Stratified (by year)`=SE(REM.reg),
`Stratified with lmer`=SE(REM.lmer))
